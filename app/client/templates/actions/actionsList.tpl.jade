.page.plan.actionList: .container: .row
  .col-md-3.text-center: .mFadeInLeft
      div: span.fa.fa-gears.fa-5x
      h4 {{_ "actionList_title"}}
      .newActionBtn: a.btn.btn-primary.newGenericActionBtn(role='button') {{_ "new_generic_action"}}
      .newActionBtn: a.btn.btn-primary(href='{{pathFor "actions-apply"}}', role='button') {{_ 'apply_actions'}}
  .col-md-9: .actionGrid: .row: .mFadeInDown
    each getGenericActions
      .col-md-3
        .newActionFromMaster
          if isAdmin
            .dropdown.dropdownBtn
              button(id="dLabel" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"): span.itemMenu.glyphicon.glyphicon-pencil(aria-hidden='true')
              ul.dropdown-menu(role="menu" aria-labelledby="dLabel")
                li(role="presentation")
                  a.editAction(role="menuitem" tabindex="-1" href="") Edit Action
                  a(role="menuitem" tabindex="-1" href="") Delete Action
          .logo !{logo}
          .actionTitle= name
    //- each getGenericActions
    //-   .col-md-3
    //-     .newActionFromMaster
    //-       if isAdmin
    //-         button.btn.btn-default.btn-xs.editAction
    //-           span.glyphicon.glyphicon-pencil(aria-hidden='true')
    //-       .logo !{logo}
    //-       .actionTitle= name
    each getUserTemplateActions
      .col-md-3
        .actionUserTemplate
          button.btn.btn-default.btn-xs.editAction
            span.glyphicon.glyphicon-pencil(aria-hidden='true')
          .logo !{logo}
          .actionTitle= name
    .col-md-3
      .actionCreate
        a.newUserTempalteAction(href='')
          .addUTactionLogo: span.fa-stack.fa-lg
            i.fa.fa-circle-o.fa-stack-2x
            i.fa.fa-plus
          .blackLink.actionTitle {{_ "newUserTemplateAction"}}
